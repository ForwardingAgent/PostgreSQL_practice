version: '3.8'
services:
  db:
    image: postgres:16.0-alpine
    container_name: pgdb_container
    restart: unless-stopped
    platform: linux/amd64  # тк Mac создает image в другой системе
    # env_file:  # скрыть для Github Actions тк секреты в secrets
    #  - .env   # скрыть для Github Actions тк секреты в secrets
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - nikolas_pgdata:/var/lib/postgresql/data
    networks:
      - postgres_1

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    platform: linux/amd64
    # env_file:  #  скрыть для Github Actions тк секреты в secrets
    #  - .env
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgres_1

volumes:
  nikolas_pgdata:
  pgadmin-data:

networks:
  postgres_1:
    driver: bridge

# php:  чтобы сдлать на основе моего образа на dockerhub
#    build:
#      context: .
#      dockerfile: Dockerfile    !!!!!!!!
#    image: "yourregistry/phpimage:latest"   !!!!!!!!
#    ports:
#      - "8090:8085"
#    volumes:
#      - .:/var/www/html/Author-API
#    restart: always
#    depends_on:
#      - db